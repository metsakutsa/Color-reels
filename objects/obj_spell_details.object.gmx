<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spell_details</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init the textbox
width = 192;
height = 160;
padding = 8;

//Keep track of the starting line
start = ds_list_create();
ds_list_add(start, 0);


//Keep track of the last space and current position
count = 0;
last_space = 0;
line = 0;

//Set the message
description = "";
str = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if not position_meeting(mouse_x, mouse_y, self){
    global.state = global.previous_state;
    instance_destroy();
}

else{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the ds list
ds_list_destroy(start);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the string and the box 

draw_set_font(fnt_menu);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(c_white);

draw_set_alpha(.5);
//draw_roundrect_color(x,y,x-width,y-height, c_black, c_black, false);

scr_text(description, 1, x-width, y-height);
draw_set_alpha(1);


//draw_sprite_ext(sprite_index, -1, x-width+padding, y-height+padding, 1, 1, 0, c_black, 0.5);

/*
//If past the width, insert line break
//Has to be before getting the last_space variable
if (string_width(str) &gt; width - padding) {
    //Remove the space and replace it with a line break
    description = string_delete(description, last_space, 1);
    description = string_insert("#", description, last_space);
    ds_list_add(start, last_space+1);
}
//Make sure we have not reached the end of the description
if (count &lt; string_length(description)){
    //Are we at a space? Set last space variable
    if (string_char_at(description, count) == " ") {
        last_space = count;
    }
    
    //Increment count
    count++;
}

//Did we go past the bottom? Move up a line
if (string_height(str) &gt; height - padding ){
    line++;
}

//Grab string
str = string_copy(description, ds_list_find_value(start,line), count - ds_list_find_value(start, line));

//Draw text
draw_text_outline(x+padding-width, y+padding-height, str, 1, c_black);
   
    /*
    draw_sprite(sprite_index, -1, x, y);
    draw_text_outline(x-width+padding, y-height+padding, description,1,c_black);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
